---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: frontend-logs-volume
spec:
  storageClassName: manual
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/home/ubuntu/frontend-logs-volume"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: frontend-logs-pvc
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    com.dagknows.service: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      com.dagknows.service: frontend
  template:
    metadata:
      labels:
        com.dagknows.service: frontend
    spec:
      containers:
        - name: frontend
          image: gcr.io/{{SUPER_USER_ORG}}-dagknows-images/agent_frontend:latest ## - To be replaced by GCR image.
          imagePullPolicy: "Always"
          command: ["python", "src/agent_frontend_vault.py"]
          env:
            - name: DAGKNOWS_URL
              valueFrom:
                secretKeyRef:
                  name: com.dagknows.secret.frontend
                  key: DAGKNOWS_URL
            - name: PROXY_SESSION_ID
              valueFrom:
                secretKeyRef:
                  name: com.dagknows.secret.frontend
                  key: PROXY_SESSION_ID
            - name: RECONNECT_TIMER
              value: "300"
          volumeMounts:
            - mountPath: /usr/src/app/logs
              name: logs-vol
            - mountPath: /usr/src/app/keys
              name: keys-vol
      volumes:
        - name: logs-vol
          persistentVolumeClaim:
            claimName: frontend-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    com.dagknows.service: frontend
spec:
  clusterIP: None
  ports:
    - port: 5432
  selector:
    com.dagknows.service: frontend
